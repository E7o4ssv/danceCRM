const axios = require('axios');

const API_BASE_URL = 'http://89.104.71.170:5000/api';
const REAL_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODc4NDczYWIwMWY3OGVlZDBlYWVmZTQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NTI3NzAwNDcsImV4cCI6MTc1Mjg1NjQ0N30.c80rtVNkpmjV4xWcKVez_ZB_R_-riaj89xFBvbku_Ww';

async function testFinalDeployment() {
  try {
    console.log('üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è');
    console.log('=====================================');
    
    // 1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...');
    
    const [studentsRes, groupsRes, usersRes] = await Promise.all([
      axios.get(`${API_BASE_URL}/students`, { headers: { Authorization: `Bearer ${REAL_TOKEN}` } }),
      axios.get(`${API_BASE_URL}/groups`, { headers: { Authorization: `Bearer ${REAL_TOKEN}` } }),
      axios.get(`${API_BASE_URL}/auth/users`, { headers: { Authorization: `Bearer ${REAL_TOKEN}` } })
    ]);
    
    console.log(`‚úÖ –°—Ç—É–¥–µ–Ω—Ç–æ–≤: ${studentsRes.data.length}`);
    console.log(`‚úÖ –ì—Ä—É–ø–ø: ${groupsRes.data.length}`);
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersRes.data.length}`);
    
    // 2. –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    if (usersRes.data.length > 0) {
      const testUser = usersRes.data[0];
      const newStatus = !testUser.isActive;
      
      try {
        await axios.put(
          `${API_BASE_URL}/auth/users/${testUser._id}/status`,
          { isActive: newStatus },
          { headers: { Authorization: `Bearer ${REAL_TOKEN}` } }
        );
        console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${newStatus ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}`);
      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: ${error.response?.status}`);
      }
    }
    
    // 3. –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø—É
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø—É...');
    if (studentsRes.data.length > 0 && groupsRes.data.length > 0) {
      const student = studentsRes.data[0];
      const group = groupsRes.data[0];
      
      try {
        await axios.post(
          `${API_BASE_URL}/groups/${group._id}/students`,
          { studentId: student._id },
          { headers: { Authorization: `Bearer ${REAL_TOKEN}` } }
        );
        console.log(`‚úÖ –°—Ç—É–¥–µ–Ω—Ç ${student.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É ${group.name}`);
      } catch (error) {
        if (error.response?.status === 400 && error.response?.data?.message?.includes('already')) {
          console.log(`‚úÖ –°—Ç—É–¥–µ–Ω—Ç —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ (–æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)`);
        } else {
          console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞: ${error.response?.status}`);
        }
      }
    }
    
    // 4. –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –≥—Ä—É–ø–ø—ã
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –≥—Ä—É–ø–ø—ã...');
    if (studentsRes.data.length > 0 && groupsRes.data.length > 0) {
      const student = studentsRes.data[0];
      const group = groupsRes.data[0];
      
      try {
        await axios.delete(
          `${API_BASE_URL}/groups/${group._id}/students/${student._id}`,
          { headers: { Authorization: `Bearer ${REAL_TOKEN}` } }
        );
        console.log(`‚úÖ –°—Ç—É–¥–µ–Ω—Ç ${student.name} —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã ${group.name}`);
      } catch (error) {
        console.log(`‚ÑπÔ∏è –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –±—ã–ª –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω`);
      }
    }
    
    console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ –≥—Ä—É–ø–ø —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–¥–µ–ø–ª–æ–µ–Ω');
    console.log('‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    console.log('\nüöÄ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–µ:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testFinalDeployment(); 