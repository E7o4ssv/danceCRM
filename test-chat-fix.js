const axios = require('axios');

const BASE_URL = 'http://89.104.71.170:5000';

async function testChatFunctionality() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞');
  console.log('=====================================\n');

  try {
    // 1. –õ–æ–≥–∏–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    console.log('1Ô∏è‚É£ –õ–æ–≥–∏–Ω...');
    const loginResponse = await axios.post(`${BASE_URL}/api/auth/login`, {
      username: 'admin',
      password: 'admin123'
    });
    
    const token = loginResponse.data.token;
    const headers = {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    };
    
    console.log('‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω\n');

    // 2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
    console.log('2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤...');
    const chatsResponse = await axios.get(`${BASE_URL}/api/private-chat/chats`, { headers });
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —á–∞—Ç–æ–≤: ${chatsResponse.data.length}`);
    console.log('üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤:', JSON.stringify(chatsResponse.data, null, 2));
    console.log('');

    // 3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await axios.get(`${BASE_URL}/api/private-chat/users`, { headers });
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.data.length}`);
    console.log('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', JSON.stringify(usersResponse.data, null, 2));
    console.log('');

    // 4. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Ç–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if (usersResponse.data.length > 0) {
      const partnerId = usersResponse.data[0]._id;
      console.log(`4Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${usersResponse.data[0].name}...`);
      const chatResponse = await axios.get(`${BASE_URL}/api/private-chat/chats/${partnerId}`, { headers });
      console.log('‚úÖ –ß–∞—Ç –ø–æ–ª—É—á–µ–Ω:', JSON.stringify(chatResponse.data, null, 2));
      console.log('');

      // 5. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
      console.log('5Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');
      const messageResponse = await axios.post(`${BASE_URL}/api/private-chat/chats/${partnerId}/messages`, {
        content: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ' + new Date().toLocaleString()
      }, { headers });
      console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', JSON.stringify(messageResponse.data, null, 2));
      console.log('');

      // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
      console.log('6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —á–∞—Ç–∞...');
      const updatedChatResponse = await axios.get(`${BASE_URL}/api/private-chat/chats/${partnerId}`, { headers });
      console.log('‚úÖ –ß–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω:', JSON.stringify(updatedChatResponse.data, null, 2));
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üí¨ –ß–∞—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    process.exit(1);
  }
}

testChatFunctionality(); 